---

name: Fetch network build inputs
description: Fetch/cache elevation and street network files
inputs:
  year:
    description: Census year of the network data to fetch
    required: true
  state:
    description: Census state code of the network data to fetch
    required: true

runs:
  using: composite
  steps:
    # Assumes actions/checkout and setup-cloudflare-s3 have already been run
    - name: Cache restore osmextract input data
      id: cache-restore-osmextract-input
      uses: actions/cache/restore@v4
      with:
        path: ./data/intermediate/osmextract
        key: osmextract-${{ inputs.year }}-${{ inputs.state }}-${{ hashFiles('./data/dvc.lock') }}

    - name: Cache restore elevation input data
      id: cache-restore-elevation-input
      uses: actions/cache/restore@v4
      with:
        path: ./data/input/elevation
        key: elevation-${{ inputs.state }}-${{ hashFiles('./data/dvc.lock') }}

    - name: Install DVC
      if: ${{ steps.cache-restore-osmextract-input.outputs.cache-hit != 'true' ||
              steps.cache-restore-elevation-input.outputs.cache-hit != 'true' }}
      uses: ./.github/actions/setup-dvc

    - name: Pull DVC objects
      if: ${{ steps.cache-restore-osmextract-input.outputs.cache-hit != 'true' ||
              steps.cache-restore-elevation-input.outputs.cache-hit != 'true' }}
      shell: bash
      working-directory: 'data'
      run: |
        dvc pull --no-run-cache \
          ./intermediate/osmextract/year=${{ inputs.year }}/geography=state/state=${{ inputs.state }}/${{ inputs.state }}.osm.pbf \
          ./input/elevation/geography=state/state=${{ inputs.state }}/${{ inputs.state }}.tif

    - name: Cache save osmextract input data
      if: ${{ steps.cache-restore-osmextract-input.outputs.cache-hit != 'true' }}
      id: cache-save-osmextract-input
      uses: actions/cache/save@v4
      with:
        path: ./data/intermediate/osmextract
        key: osmextract-${{ inputs.year }}-${{ inputs.state }}-${{ hashFiles('./data/dvc.lock') }}

    - name: Cache save elevation input data
      if: ${{ steps.cache-restore-elevation-input.outputs.cache-hit != 'true' }}
      id: cache-save-elevation-input
      uses: actions/cache/save@v4
      with:
        path: ./data/input/elevation
        key: elevation-${{ inputs.state }}-${{ hashFiles('./data/dvc.lock') }}
