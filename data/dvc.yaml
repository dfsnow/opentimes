---

stages:
  fetch_tiger_national:
    matrix:
      year: ${input.year}
      geography: ${input.census.geography.national}
    cmd: "python ./src/fetch_tiger.py
      --year ${item.year} --geography ${item.geography}"
    outs:
      - ./input/tiger/year=${item.year}/geography=${item.geography}/${item.geography}.zip:
          persist: true

  fetch_tiger_by_state:
    matrix:
      year: ${input.year}
      geography: ${input.census.geography.by_state}
      state: ${input.state}
    cmd: "python ./src/fetch_tiger.py
      --year ${item.year} --geography ${item.geography} --state ${item.state}"
    outs:
      - ./input/tiger/year=${item.year}/geography=${item.geography}/state=${item.state}/${item.state}.zip:
          persist: true

  fetch_blockpop_by_state:
    matrix:
      year:
        - '2020'
      state: ${input.state}
    cmd: >-
      python ./src/fetch_blockpop.py --year ${item.year} --state ${item.state}
    outs:
      - ./input/blockpop/year=${item.year}/state=${item.state}/${item.state}.parquet:
          persist: true

  fetch_osm_national:
    matrix:
      year: ${input.year}
    cmd:
      'LAST_TWO=$( echo ${item.year} | cut -c 3-4) &&
      mkdir -p ./input/osm/year=${item.year} &&
      wget -P ./input/osm/year=${item.year}
      -O ./input/osm/year=${item.year}/us-${item.year}.osm.pbf
      https://download.geofabrik.de/north-america-"$LAST_TWO"0101.osm.pbf'
    outs:
      - ./input/osm/year=${item.year}/us-${item.year}.osm.pbf:
          persist: true

  create_blockloc:
    deps:
      - ./input/blockpop/year=2020/state=${item.state}/${item.state}.parquet
      - ./input/tiger/year=${item.year}/geography=block/state=${item.state}/${item.state}.zip
    matrix:
      year: ${input.year}
      state: ${input.state}
    cmd: "python ./src/create_blockloc.py
      --year ${item.year} --state ${item.state}"
    outs:
      - ./intermediate/blockloc/year=${item.year}/state=${item.state}/${item.state}.parquet:
          persist: true

  create_cenloc_national:
    deps:
      - ./input/tiger/year=${item.year}/geography=${item.geography}/${item.geography}.zip
      - ./intermediate/blockloc/year=${item.year}/
    matrix:
      year: ${input.year}
      geography: ${input.census.geography.national}
    cmd: "python ./src/create_cenloc.py
      --year ${item.year} --geography ${item.geography}"
    outs:
      - ./intermediate/cenloc/year=${item.year}/geography=${item.geography}/${item.geography}.parquet:
          persist: true

  create_cenloc_by_state:
    deps:
      - ./input/tiger/year=${item.year}/geography=${item.geography}/state=${item.state}/${item.state}.zip
      - ./intermediate/blockloc/year=${item.year}/
    matrix:
      year: ${input.year}
      geography:
        - county_subdivision
        - tract
        - block_group
      state: ${input.state}
    cmd: "python ./src/create_cenloc.py
      --year ${item.year} --geography ${item.geography}"
    outs:
      - ./intermediate/cenloc/year=${item.year}/geography=${item.geography}/state=${item.state}/${item.state}.parquet:
          persist: true
